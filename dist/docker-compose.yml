services:

### Level management

# Reverse proxy
  haproxy:
    platform: linux/x86_64
    container_name: haproxy
    image: haproxy:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
      - ./config/cert.pem:/usr/local/etc/haproxy/cert.pem
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
      level1:
        condition: service_started
      level2:
        condition: service_started
      level3:
        condition: service_started
      level4:
        condition: service_started
      level5:
        condition: service_started
      level6:
        condition: service_started
      level7:
        condition: service_started
      level8:
        condition: service_started
      level9:
        condition: service_started
      level10:
        condition: service_started

# Backend
  backend:
    image: 2bgp-ctf_backend
    container_name: backend
    env_file:
      - config/backend.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/levels"]
      interval: 2s
      timeout: 5s
      retries: 3
      start_period: 3s

# Frontend
  frontend:
    image: 2bgp-ctf_frontend
    container_name: frontend
    depends_on:
      backend:
        condition: service_healthy

# MongoDB Database
  mongodb:
    platform: linux/x86_64
    image: mongo:4.4.6
    container_name: mongodb
    volumes:
      - mongodata:/data/db
    env_file:
      - config/mongodb.env
    ports:
      - "27017:27017"

# Deploy
  deploy:
    platform: linux/x86_64
    image: curlimages/curl
    container_name: deploy
    volumes:
      - ./scripts/deploy_levels.sh:/scripts/deploy_levels.sh
      - ./scripts/deploy_level9.sh:/scripts/deploy_level9.sh
      - ./config/backend.env:/scripts/config/backend.env
    command: ["sh", "/scripts/deploy_levels.sh"]
    depends_on:
      backend:
        condition: service_healthy

# Selenium for auto login
  selenium_chrome:
    platform: linux/x86_64
    image: selenium/standalone-chrome:latest
    container_name: selenium_chrome
    shm_size: 2g
    restart: unless-stopped

# Auto login
  selenium_login:
    platform: linux/x86_64
    image: python:3.9-slim
    container_name: selenium_login
    volumes:
      - ./scripts/login_script.py:/app/login_script.py
      - ./scripts/login_run.sh:/app/run_loop.sh
    working_dir: /app
    environment:
      - DISPLAY=:99
      - SELENIUM_URL=http://selenium_chrome:4444/wd/hub
    depends_on:
      - selenium_chrome
    command: ["/bin/bash", "-c", "pip install requests beautifulsoup4 selenium webdriver-manager && chmod +x run_loop.sh && ./run_loop.sh"]
    restart: unless-stopped


### Levels

# Database
  mysql:
    platform: linux/x86_64
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: manicure-handbrake-cadet # Useless
    volumes:
      - ./scripts/deploy_db.sql:/docker-entrypoint-initdb.d/init.sql

# Level 1
  level1:
    image: 2bgp-ctf_level1
    container_name: level1
    depends_on:
      backend:
        condition: service_healthy

# Level 2
  level2:
    image: 2bgp-ctf_level2
    container_name: level2
    depends_on:
      backend:
        condition: service_healthy

# Level 3
  level3:
    image: 2bgp-ctf_level3
    container_name: level3
    depends_on:
      backend:
        condition: service_healthy

# Level 4
  level4:
    image: 2bgp-ctf_level4
    container_name: level4
    depends_on:
      backend:
        condition: service_healthy

# Level 5
  level5:
    image: 2bgp-ctf_level5
    container_name: level5
    depends_on:
      backend:
        condition: service_healthy

# Level 6
  level6:
    image: 2bgp-ctf_level6
    container_name: level6
    depends_on:
      backend:
        condition: service_healthy

# Level 7
  level7:
    image: 2bgp-ctf_level7
    container_name: level7
    depends_on:
      backend:
        condition: service_healthy

# Level 8
  level8:
    image: 2bgp-ctf_level8
    container_name: level8
    depends_on:
      backend:
        condition: service_healthy

# Level 9
  level9:
    image: 2bgp-ctf_level9
    container_name: level9
    depends_on:
      backend:
        condition: service_healthy

# Level 10
  level10:
    image: 2bgp-ctf_level10
    container_name: level10
    depends_on:
      backend:
        condition: service_healthy

volumes:
  mongodata:
    external: false
