global
    log stdout format raw local0
    maxconn 4096
    user haproxy
    group haproxy

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    option  http-server-close
    option  forwardfor
    timeout connect 5000
    timeout client  50000
    timeout server  50000

frontend http-in
    bind *:80
    mode http
    option forwardfor
    http-request set-header X-Forwarded-Proto http
    http-request redirect scheme https unless { ssl_fc }

frontend https-in
    bind *:443 ssl crt /usr/local/etc/haproxy/cert.pem
    mode http
    option forwardfor

    http-request set-header X-Forwarded-Proto https

    # Capture SNI
    http-request capture req.ssl_sni len 64

    # ACLs for SNI
    acl is_frontend_sni  req.ssl_sni -m str -i 2bgp-ctf.vpws.eu
    acl is_api_sni       req.ssl_sni -m str -i api.2bgp-ctf.vpws.eu
    acl is_target1_sni   req.ssl_sni -m str -i target1.2bgp-ctf.vpws.eu
    acl is_target2_sni   req.ssl_sni -m str -i target2.2bgp-ctf.vpws.eu
    acl is_target3_sni   req.ssl_sni -m str -i target3.2bgp-ctf.vpws.eu
    acl is_target4_sni   req.ssl_sni -m str -i target4.2bgp-ctf.vpws.eu
    acl is_target5_sni   req.ssl_sni -m str -i target5.2bgp-ctf.vpws.eu
    acl is_target6_sni   req.ssl_sni -m str -i target6.2bgp-ctf.vpws.eu
    acl is_target7_sni   req.ssl_sni -m str -i target7.2bgp-ctf.vpws.eu
    acl is_target8_sni   req.ssl_sni -m str -i target8.2bgp-ctf.vpws.eu
    acl is_target9_sni   req.ssl_sni -m str -i target9.2bgp-ctf.vpws.eu
    acl is_target10_sni  req.ssl_sni -m str -i target10.2bgp-ctf.vpws.eu

    # ACLs for Host header (fallback)
    acl is_frontend_host  req.hdr(Host) -m str -i 2bgp-ctf.vpws.eu
    acl is_api_host       req.hdr(Host) -m str -i api.2bgp-ctf.vpws.eu
    acl is_target1_host   req.hdr(Host) -m str -i target1.2bgp-ctf.vpws.eu
    acl is_target2_host   req.hdr(Host) -m str -i target2.2bgp-ctf.vpws.eu
    acl is_target3_host   req.hdr(Host) -m str -i target3.2bgp-ctf.vpws.eu
    acl is_target4_host   req.hdr(Host) -m str -i target4.2bgp-ctf.vpws.eu
    acl is_target5_host   req.hdr(Host) -m str -i target5.2bgp-ctf.vpws.eu
    acl is_target6_host   req.hdr(Host) -m str -i target6.2bgp-ctf.vpws.eu
    acl is_target7_host   req.hdr(Host) -m str -i target7.2bgp-ctf.vpws.eu
    acl is_target8_host   req.hdr(Host) -m str -i target8.2bgp-ctf.vpws.eu
    acl is_target9_host   req.hdr(Host) -m str -i target9.2bgp-ctf.vpws.eu
    acl is_target10_host  req.hdr(Host) -m str -i target10.2bgp-ctf.vpws.eu

    # Use backend based on SNI or Host header
    use_backend backend_frontend if is_frontend_sni or is_frontend_host
    use_backend backend_api if is_api_sni or is_api_host
    use_backend backend_target1 if is_target1_sni or is_target1_host
    use_backend backend_target2 if is_target2_sni or is_target2_host
    use_backend backend_target3 if is_target3_sni or is_target3_host
    use_backend backend_target4 if is_target4_sni or is_target4_host
    use_backend backend_target5 if is_target5_sni or is_target5_host
    use_backend backend_target6 if is_target6_sni or is_target6_host
    use_backend backend_target7 if is_target7_sni or is_target7_host
    use_backend backend_target8 if is_target8_sni or is_target8_host
    use_backend backend_target9 if is_target9_sni or is_target9_host
    use_backend backend_target10 if is_target10_sni or is_target10_host

    # Default backend if no match is found
    default_backend backend_target5

backend backend_frontend
    server frontend frontend:80 check

backend backend_api
    server backend backend:3000 check

backend backend_target1
    server level1 level1:80 check

backend backend_target2
    server level2 level2:80 check

backend backend_target3
    server level3 level3:80 check

backend backend_target4
    server level4 level4:80 check

backend backend_target5
    server level5 level5:80 check

backend backend_target6
    server level6 level6:80 check

backend backend_target7
    server level7 level7:80 check

backend backend_target8
    server level8 level8:80 check

backend backend_target9
    server level9 level9:80 check

backend backend_target10
    server level10 level10:80 check
